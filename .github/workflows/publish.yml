name: Publish to PyPi

on:
  release:
    types: [published]

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"
    - name: Set release notes tag
      run: |
        export RELEASE_TAG_VERSION=${{ github.event.release.tag_name }}
        echo ::set-env name=RELEASE_TAG_VERSION::${RELEASE_TAG_VERSION:1}
    - name: Ensure new version is also set in pyproject
      run: |
        grep --regexp "version \= \"${RELEASE_TAG_VERSION}\"" pyproject.toml
    - name: Install dependencies
      run: |
        pip install --upgrade pip poetry
        poetry install
    - name: Run all tests, linting and baselines
      run: |
        poetry run flake8
        poetry run isort
        poetry run black
    - name: Build python package and wheel
      run: poetry build
    - name: Upload to PyPi test
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry config pypi-token.testpypi ${PYPI_TEST_TOKEN}
        poetry publish --repository testpypi -n
      env:
        PYPI_USERNAME: __token__
        PYPI_TEST_TOKEN: ${{ secrets.PYPI_TEST_TOKEN }}
    - name: Upload to PyPi prod
      run: |
        poetry config pypi-token.pypi ${PYPI_TOKEN}
        poetry publish -n
      env:
        PYPI_USERNAME: __token__
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
